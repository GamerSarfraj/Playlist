name: Update SonyLIV hdnea in Slivtv.json

on:
  schedule:
    - cron: '0 */4 * * *'   # Har 4 ghante mein chalega
  workflow_dispatch:        # Manual run ke liye

jobs:
  update-hdnea:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Requests
        run: pip install requests

      - name: Fetch hdnea & Update Slivtv.json
        run: |
          python << 'PY'
          import requests
          import json
          import re
          import sys
          import os

          API_URL = "https://apiv4.sonyliv.com/AGL/4.7/A/ENG/MWEB/IN/BR/CONTENT/VIDEOURL/VOD/1000051729"
          FILE = "Slivtv.json"

          print("Step 1: Downloading API JSON...")
          try:
              resp = requests.get API_URL, timeout=20)
              resp.raise_for_status()
              data = resp.json()
          except Exception as e:
              print(f"API fetch failed: {e}")
              sys.exit(1)

          playback_url = data.get("result", {}).get("playbackUrl")
          if not playback_url:
              print("playbackUrl not found in JSON response")
              sys.exit(1)

          print(f"Step 2: Found playbackUrl → {playback_url[:80]}...")

          print("Step 3: Downloading .m3u8 playlist...")
          try:
              hls_resp = requests.get(playback_url, timeout=20)
              hls_resp.raise_for_status()
              hls_content = hls_resp.text
          except Exception as e:
              print(f"HLS fetch failed: {e}")
              sys.exit(1)

          hdnea_match = re.search(r'hdnea=[^&\s"\'?]+', hls_content)
          if not hdnea_match:
              print("hdnea not found in .m3u8 file")
              print("First 500 chars of HLS:")
              print(hls_content[:500])
              sys.exit(1)

          hdnea = hdnea_match.group(0)
          print(f"Step 4: Extracted hdnea → {hdnea}")

          # Update JSON file
          if not os.path.exists(FILE):
              print(f"{FILE} not found in repository!")
              sys.exit(1)

          with open(FILE, 'r', encoding='utf-8') as f:
              try:
                  channels = json.load(f)
              except json.JSONDecodeError as e:
                  print(f"Invalid JSON in {FILE}: {e}")
                  sys.exit(1)

          if not isinstance(channels, list):
              print(f"{FILE} must contain a JSON array of channels")
              sys.exit(1)

          updated_count = 0
          for item in channels:
              if isinstance(item, dict) and 'link' in item:
                  old = item['link']
                  new = re.sub(r'hdnea=[^&\s"\'?]+', hdnea, old)
                  if old != new:
                      item['link'] = new
                      updated_count += 1

          with open(FILE, 'w', encoding='utf-8') as f:
              json.dump(channels, f, indent=2, ensure_ascii=False)

          print(f"Step 5: Updated {updated_count} channel(s) in {FILE}")
          PY

      - name: Commit & Push Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Slivtv.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update hdnea from SonyLIV API"
            git push
            echo "Changes pushed!"
          fi
