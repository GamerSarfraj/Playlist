name: Update HDNEA Token with Cookies

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Puppeteer + Dependencies
        run: |
          npm install puppeteer axios

      - name: Get HDNEA Token using Browser Cookies
        run: |
          node -e "
          const fs = require('fs');
          const puppeteer = require('puppeteer');
          const axios = require('axios');

          (async () => {
            let browser;
            try {
              console.log('Launching browser...');
              browser = await puppeteer.launch({
                headless: true,
                args: [
                  '--no-sandbox',
                  '--disable-setuid-sandbox',
                  '--disable-dev-shm-usage',
                  '--disable-web-security',
                  '--disable-features=IsolateOrigins,site-per-process',
                  '--disable-blink-features=AutomationControlled',
                  '--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
                ],
                defaultViewport: null
              });

              const page = await browser.newPage();

              // Block unnecessary resources
              await page.setRequestInterception(true);
              page.on('request', (req) => {
                const resourceType = req.resourceType();
                if (['image', 'stylesheet', 'font', 'media'].includes(resourceType)) {
                  req.abort();
                } else {
                  req.continue();
                }
              });

              console.log('Opening SonyLIV...');
              await page.goto('https://www.sonyliv.com/shows/sab-tv-live', {
                waitUntil: 'networkidle2',
                timeout: 30000
              });

              // Wait for API to be called
              console.log('Waiting for VIDEOURL API...');
              const response = await page.waitForResponse(res => 
                res.url().includes('VIDEOURL/VOD/1090492858') && res.status() === 200,
                { timeout: 20000 }
              );

              const data = await response.json();
              const videoURL = data.resultObj?.videoURL;
              if (!videoURL) throw new Error('videoURL not found');

              const hdneaMatch = videoURL.match(/hdnea=([^&]+)/);
              if (!hdneaMatch) throw new Error('HDNEA token not found');

              const token = decodeURIComponent(hdneaMatch[1]);

              // Update JSON
              if (!fs.existsSync('Slivtv.json')) throw new Error('Slivtv.json missing');
              const json = JSON.parse(fs.readFileSync('Slivtv.json', 'utf8'));
              const channel = json.find(ch => ch.name === 'Sony SAB HD');
              if (!channel?.link) throw new Error('Channel not found');

              channel.link = channel.link.replace(/hdnea=[^&]+/, 'hdnea=' + encodeURIComponent(token));
              fs.writeFileSync('Slivtv.json', JSON.stringify(json, null, 2));

              console.log('HDNEA Token Updated via Browser Cookies!');
              console.log('Token (first 60):', token.substring(0, 60) + '...');

            } catch (err) {
              console.error('Failed:', err.message);
              process.exit(1);
            } finally {
              if (browser) await browser.close();
            }
          })();
          "

      - name: Commit & Push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Slivtv.json
          git commit -m "Update HDNEA via browser cookies" || echo "No change"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
