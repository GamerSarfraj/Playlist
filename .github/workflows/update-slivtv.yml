name: Update HDNEA from API with Cookies

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Puppeteer
        run: npm install puppeteer

      - name: Get HDNEA from Your API using Cookies
        run: |
          node -e "
          const fs = require('fs');
          const puppeteer = require('puppeteer');

          (async () => {
            let browser;
            try {
              console.log('Launching browser...');
              browser = await puppeteer.launch({
                headless: true,
                args: [
                  '--no-sandbox',
                  '--disable-setuid-sandbox',
                  '--disable-web-security',
                  '--disable-features=IsolateOrigins,site-per-process',
                  '--disable-blink-features=AutomationControlled'
                ]
              });

              const page = await browser.newPage();

              // Set real user agent
              await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36');

              // Block unnecessary resources
              await page.setRequestInterception(true);
              page.on('request', (req) => {
                const type = req.resourceType();
                if (['image', 'stylesheet', 'font'].includes(type)) {
                  req.abort();
                } else {
                  req.continue();
                }
              });

              // Open SonyLIV homepage to get cookies
              console.log('Opening sonyliv.com to get cookies...');
              await page.goto('https://www.sonyliv.com', {
                waitUntil: 'networkidle2',
                timeout: 20000
              });

              // Get cookies
              const cookies = await page.cookies();
              const cookieHeader = cookies.map(c => `${c.name}=${c.value}`).join('; ');

              console.log('Cookies captured:', cookieHeader.substring(0, 100) + '...');

              // Now call YOUR API using same cookies
              console.log('Calling your API with cookies...');
              const response = await page.evaluate(async (cookieHeader) => {
                const res = await fetch('https://apiv2.sonyliv.com/AGL/4.7/A/ENG/MWEB/IN/BR/CONTENT/VIDEOURL/VOD/1090492858', {
                  method: 'GET',
                  headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
                    'Accept': 'application/json',
                    'Origin': 'https://www.sonyliv.com',
                    'Referer': 'https://www.sonyliv.com/',
                    'Cookie': cookieHeader,
                    'Accept-Language': 'en-US,en;q=0.9'
                  }
                });
                return { status: res.status, data: await res.json() };
              }, cookieHeader);

              if (response.status !== 200) {
                throw new Error(`API returned ${response.status}`);
              }

              const videoURL = response.data?.resultObj?.videoURL;
              if (!videoURL) throw new Error('videoURL missing in response');

              const hdneaMatch = videoURL.match(/hdnea=([^&]+)/);
              if (!hdneaMatch) throw new Error('HDNEA token not found');

              const token = decodeURIComponent(hdneaMatch[1]);

              // Update JSON
              if (!fs.existsSync('Slivtv.json')) throw new Error('Slivtv.json not found');
              const json = JSON.parse(fs.readFileSync('Slivtv.json', 'utf8'));
              const channel = json.find(ch => ch.name === 'Sony SAB HD');
              if (!channel?.link) throw new Error('Channel not found');

              channel.link = channel.link.replace(/hdnea=[^&]+/, 'hdnea=' + encodeURIComponent(token));
              fs.writeFileSync('Slivtv.json', JSON.stringify(json, null, 2));

              console.log('HDNEA Token Updated from YOUR API!');
              console.log('Token:', token.substring(0, 60) + '...');

            } catch (err) {
              console.error('Failed:', err.message);
              process.exit(1);
            } finally {
              if (browser) await browser.close();
            }
          })();
          "

      - name: Commit & Push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Slivtv.json
          git commit -m "Update HDNEA from API with cookies" || echo "No change"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
