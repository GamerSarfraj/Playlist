name: Update SonyLIV hdnea (Puppeteer - Ubuntu 22.04)

on:
  schedule:
    - cron: '0 */3 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-22.04  # ‚Üê YE CHANGE KIYA (Ubuntu 22.04)
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Puppeteer Dependencies (Ubuntu 22.04)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            fonts-liberation \
            libasound2 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgbm1 \
            libgcc1 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libnss3 \
            libpango-1.0-0 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            lsb-release \
            wget \
            xdg-utils

      - name: Install Puppeteer
        run: npm install puppeteer@23.0.0

      - name: Fetch hdnea with Real Browser
        id: fetch
        run: |
          node << 'JS'
          const puppeteer = require('puppeteer');
          const fs = require('fs');

          (async () => {
            console.log("Launching Chrome on Ubuntu 22.04...");
            const browser = await puppeteer.launch({
              headless: true,
              args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-gpu',
                '--disable-dev-shm-usage',
                '--disable-web-security',
                '--allow-running-insecure-content',
                '--disable-features=IsolateOrigins,site-per-process'
              ]
            });

            const page = await browser.newPage();
            await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36');

            console.log("Visiting SonyLIV show page...");
            await page.goto('https://www.sonyliv.com/shows/sethd-1000000001/', {
              waitUntil: 'networkidle2',
              timeout: 30000
            });

            console.log("Calling API via browser...");
            const response = await page.evaluate(async () => {
              const res = await fetch('https://apiv4.sonyliv.com/AGL/4.7/A/ENG/MWEB/IN/BR/CONTENT/VIDEOURL/VOD/1000051729', {
                headers: {
                  'X-Requested-With': 'XMLHttpRequest',
                  'Accept': 'application/json'
                }
              });
              return await res.json();
            });

            fs.writeFileSync('api_response.json', JSON.stringify(response, null, 2));

            if (response.resultCode !== 'OK') {
              console.log("BLOCKED or ERROR:", response.message || response.resultCode);
              process.exit(1);
            }

            const videoURL = response.result?.videoURL;
            if (!videoURL) {
              console.log("videoURL not found!");
              process.exit(1);
            }

            const hdnea = videoURL.match(/hdnea=[^&"']+/)?.[0];
            if (!hdnea) {
              console.log("hdnea not found!");
              process.exit(1);
            }

            console.log("SUCCESS! hdnea =", hdnea);
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `HDNEA=${hdnea}\n`);

            await browser.close();
          })();
          JS

      - name: Update Slivtv.json
        run: |
          HDNEA=$(grep "HDNEA=" $GITHUB_OUTPUT | cut -d= -f2-)
          FILE="Slivtv.json"
          
          cp "$FILE" "$FILE.bak"
          sed -i "s|hdnea=[^&\"' ]*|${HDNEA}|g" "$FILE"
          echo "Updated $FILE"

      - name: Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Slivtv.json
          if git diff --staged --quiet; then
            echo "No changes"
          else
            git commit -m "Auto-update hdnea (puppeteer ubuntu-22.04)"
            git push
          fi
