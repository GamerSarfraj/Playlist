name: Update SonyLIV hdnea in Slivtv.json

on:
  schedule:
    - cron: '0 */4 * * *'  # Har 4 ghante mein
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Requests
        run: pip install-install requests

      - name: Extract hdnea & Update JSON
        run: |
          python - <<'PY'
          import requests
          import json
          import re
          import sys

          API_URL = "https://apiv4.sonyliv.com/AGL/4.7/A/ENG/MWEB/IN/BR/CONTENT/VIDEOURL/VOD/1000051729"
          FILE = "Slivtv.json"

          try:
              # Step 1: Download API JSON
              print("Fetching API JSON...")
              resp = requests.get(API_URL, timeout=20)
              resp.raise_for_status()
              data = resp.json()

              playback_url = data.get("result", {}).get("playbackUrl")
              if not playback_url:
                  print("playbackUrl not found in JSON")
                  sys.exit(1)

              print(f"Playback URL: {playback_url}")

              # Step 2: Download .m3u8 playlist
              print("Fetching HLS playlist...")
              hls_resp = requests.get(playback_url, timeout=20)
              hls_resp.raise_for_status()
              hls_text = hls_resp.text

              # Step 3: Extract hdnea=...
              hdnea_match = re.search(r'hdnea=[^&\s"\'?]+', hls_text)
              if not hdnea_match:
                  print("hdnea not found in .m3u8")
                  sys.exit(1)

              hdnea = hdnea_match.group(0)
              print(f"Extracted hdnea: {hdnea}")

              # Step 4: Update Slivtv.json
              if not open(FILE).read().strip():
                  print(f"{FILE} is empty!")
                  sys.exit(1)

              with open(FILE, 'r', encoding='utf-8') as f:
                  channels = json.load(f)

              updated = 0
              for item in channels:
                  if isinstance(item, dict) and 'link' in item:
                      old_link = item['link']
                      new_link = re.sub(r'hdnea=[^&\s"\'?]+', hdnea, old_link)
                      if old_link != new_link:
                          item['link'] = new_link
                          updated += 1

              with open(FILE, 'w', encoding='utf-8') as f:
                  json.dump(channels, f, indent=2, ensure_ascii=False)

              print(f"Updated {updated} channels in {FILE}")

          except Exception as e:
              print(f"Error: {e}")
              import traceback
              traceback.print_exc()
              sys.exit(1)
          PY

      - name: Commit & Push if Changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Slivtv.json
          git diff --quiet && echo "No changes" || (
            git commit -m "Auto-update hdnea from SonyLIV API"
            git push
          )
